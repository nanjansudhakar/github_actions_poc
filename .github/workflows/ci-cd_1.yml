name: CI/CD Pipeline - 1

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java (or any other language/environment)
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Options: adopt, zulu, temurin, etc.
          java-version: '17'      # Specify the Java version as needed

      # Step 3: Build the application
      - name: Build with Gradle
        run: ./gradlew build  # Replace with your build command (e.g., Maven, NPM)

      # Step 4: Run SonarQube scan
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v1.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Set your SonarQube token in GitHub secrets
        with:
          projectKey: your-project-key # Replace with your SonarQube project key
          hostUrl: ${{ secrets.SONAR_HOST_URL }} # SonarQube server URL

      # Step 5: Run Checkmarx scan
      - name: Checkmarx Security Scan
        run: |
          curl -sSL https://download.checkmarx.com/cxflow/cli/install.sh | bash # Install Checkmarx CLI if not available
          ./cxflow scan --project-name "your-project-name" --repo-url "${{ github.repository }}" --branch "${{ github.ref_name }}" --token "${{ secrets.CHECKMARX_TOKEN }}" # Replace with relevant Checkmarx CLI commands

      # Step 6: Publish to Artifactory
      - name: Publish to Artifactory
        uses: jfrog/setup-jfrog-cli@v2
        with:
          version: latest

      - name: Configure JFrog CLI
        run: jfrog rt config --url="${{ secrets.ARTIFACTORY_URL }}" --user="${{ secrets.ARTIFACTORY_USERNAME }}" --password="${{ secrets.ARTIFACTORY_PASSWORD }}" --interactive=false

      - name: Upload build artifacts
        run: jfrog rt upload "build/libs/*.jar" "artifactory-repo/path/to/upload/" # Adjust the path according to your build outputs
