name: test CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (if your project is Java-based)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      # Step 3: Build the application (Maven example)
      - name: Build with Maven
        run: mvn clean install

      # Step 4: SonarQube scan
      - name: SonarQube Scan
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar

      # Step 5: Checkmarx Security Scanning
      - name: Checkmarx Security Scan
        env:
          CHECKMARX_API_KEY: ${{ secrets.CHECKMARX_API_KEY }}
          CHECKMARX_PROJECT_NAME: 'YourProjectName'
        run: |
          # Assuming you have a CLI script or a docker run command for Checkmarx scan
          curl -X POST "https://checkmarx-api-url/api/scans" \
               -H "Authorization: Bearer $CHECKMARX_API_KEY" \
               -H "Content-Type: application/json" \
               -d '{"projectName": "$CHECKMARX_PROJECT_NAME", "sourceLocation": "./"}'

      # Step 6: Publish to Artifactory
      - name: Publish to Artifactory
        env:
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
        run: |
          curl -u $ARTIFACTORY_USERNAME:$ARTIFACTORY_PASSWORD \
               -T target/your-artifact.jar \
               "$ARTIFACTORY_URL/path/to/repository/your-artifact.jar"
